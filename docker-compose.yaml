# https://www.juststeveking.com/articles/laravel-subdomains-in-docker/

services:
  nginx:
    container_name: "${PROJECT_NAME}_nginx"
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    depends_on:
      - app
    volumes:
      - ./:/var/www/vhost/lscore:cached
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    working_dir: /var/www/vhost/
    ports:
      - '443:443'
      - '9008:9008'
    networks:
      - lscore
    labels:
      - 'traefik.http.routers.${PROJECT_NAME}_nginx.rule=HostRegexp(`${APP_DOMAIN}`, `{subdomain:[a-z]+.${APP_DOMAIN}}`)'
      - 'traefik.http.routers.${PROJECT_NAME}_nginx.priority=1'
      - 'traefik.docker.network=proxy'

  mailpit:
    image: axllent/mailpit:latest
    container_name: "${PROJECT_NAME}_mailpit"
    environment:
      MAILPIT_UI_BIND_ADDR: 0.0.0.0:8025
      MAILPIT_SMTP_BIND_ADDR: 0.0.0.0:1025
    ports:
      - "8026:8025"
      - "1026:1025"
    networks:
      - lscore

  minio:
    image: minio/minio:latest
    container_name: "${PROJECT_NAME}_minio"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: '${MINIO_ROOT_USER:-minioadmin}'
      MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD:-minioadmin}'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - 'lscore_minio:/data'
    networks:
      - lscore

  soketi:
    container_name: '${PROJECT_NAME}_soketi'
    restart: unless-stopped
    image: 'quay.io/soketi/soketi:0.17-16-alpine'
    ports:
      - '${SOKETI_PORT:-6001}:6001'
      - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    environment:
      SOKETI_DEBUG: '${DEBUG:-1}'
      DEFAULT_APP_ID: '${PUSHER_APP_ID:-some-id}'
      DEFAULT_APP_KEY: '${PUSHER_APP_KEY:-app-key}'
      DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET:-some-app-secret}'
      PUSHER_HOST: '${PUSHER_HOST:-127.0.0.1}'
      PUSHER_PORT: '${PUSHER_PORT:-6001}'
      PUSHER_SCHEME: 'https'
      METRICS_SERVER_PORT: ${SOKETI_METRICS_SERVER_PORT:-9601}
      DEFAULT_APP_ENABLE_CLIENT_MESSAGES: ${DEFAULT_APP_ENABLE_CLIENT_MESSAGES:-false}
    volumes:
      - ./docker/nginx/ssl:/etc/ssl/soketi
    labels:
      - "traefik.http.routers.soketi.rule=Host(`soketi.${APP_DOMAIN}`)"
      - "traefik.http.routers.soketi.entrypoints=websecure"
      - "traefik.http.routers.soketi.tls=true"
      - "traefik.http.services.soketi.loadbalancer.server.port=6001"

    networks:
      - lscore

  app:
    container_name: "${PROJECT_NAME}_php"
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    environment:
      PHP_MEMORY_LIMIT: '512M'
      COMPOSER_MEMORY_LIMIT: '-1'
    user: 501:501
    volumes:
      - ./:/var/www/vhost/lscore:cached
    working_dir: /var/www/vhost/lscore
    ports:
      - '9003:9003'
      - '5173:5173'

    networks:
      - lscore

  redis:
    image: redis:latest
    container_name: "${PROJECT_NAME}_redis"
    ports:
      - '6379:6379'
    volumes:
      - 'lscore_redis:/data'
    networks:
      - lscore

  postgres:
    image: postgres:15.3-alpine
    container_name:  "${PROJECT_NAME}_postgres"
    restart: always
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USERNAME}'
    ports:
      - '${FORWARD_DB_PORT:-5433}:5432'
    volumes:
      - 'lscore_postgres:/var/lib/postgresql/data'
    networks:
      - lscore

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: "${PROJECT_NAME}_pgadmin"
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: user@localhost.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 8081:80
    volumes:
      - 'lscore_pgadmin:/var/lib/pgadmin'
    networks:
      - lscore

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.insecure=true
      - --log.level=debug
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    ports:
      - '80:80'
      - '8080:8080'
    networks:
      - lscore

networks:
  lscore:
    driver: bridge

volumes:
  lscore_pgadmin:
    driver: local

  lscore_postgres:
    driver: local

  lscore_redis:
    driver: local

  lscore_minio:
    driver: local
